{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
      "solutionName": {
        "type": "string",
        "defaultValue": "testing"
      },
      "vmIP": {
        "type": "string",
        "defaultValue": "10.0.100.100"
      },
      "virtualNetworkName": {
        "type": "string",
        "defaultValue": "[concat(parameters('solutionName'), '-vnet')]"
      },
      "vnetAddressPrefix": {
        "type": "string",
        "defaultValue": "10.0.0.0/16"
      },
      "subnetName": {
        "type": "string",
        "defaultValue": "[concat(parameters('solutionName'),'-subnet1')]"
      },
      "subnetAddressPrefix": {
        "type": "string",
        "defaultValue": "10.0.100.0/24"
      },
      "subnetName2": {
        "type": "string",
        "defaultValue": "[concat(parameters('solutionName'),'-subnet2')]"
      },
      "subnetAddressPrefix2": {
        "type": "string",
        "defaultValue": "10.0.101.0/24"
      },
      "_artifactsLocation": {
        "type": "string"
      },
      "_artifactsLocationSasToken": {
        "type": "securestring"
      }
    },
    "variables": {
      "OverlaySubnetTemplateFolder": "nestedtemplates",
      "OverlaySubnetTemplateFileName": "OverlaySubnet.json",
      "OverlaySubnetTemplateParametersFileName": "OverlaySubnet.parameters.json",
      "vnetID": "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworkName'))]",
      "subnetRef": "[concat(variables('vnetID'), '/subnets/', parameters('subnetName'))]"
    },
    "resources": [
      {
        "name": "OverlaySubnet",
        "type": "Microsoft.Resources/deployments",
        "apiVersion": "2016-09-01",
        "dependsOn": [],
        "properties": {
          "mode": "Incremental",
          "templateLink": {
            "uri": "[concat(parameters('_artifactsLocation'), '/', variables('OverlaySubnetTemplateFolder'), '/', variables('OverlaySubnetTemplateFileName'), parameters('_artifactsLocationSasToken'))]",
            "contentVersion": "1.0.0.0"
          },
          "parameters": {
            "solutionName": {
              "value": "[parameters('solutionName')]"
            },
            "createVirtualNetwork": {
              "value": "no"
            }
          }
        }
      },
      {
        "apiVersion": "2015-06-15",
        "type": "Microsoft.Network/virtualNetworks",
        "name": "[parameters('virtualNetworkName')]",
        "location": "[resourceGroup().location]",
        "dependsOn": [],
        "properties": {
          "mode": "Incremental",
          "addressSpace": {
            "addressPrefixes": [
              "[parameters('vnetAddressPrefix')]"
            ]
          },
          "subnets": [
            {
              "name": "[parameters('subnetName')]",
              "properties": {
                "mode": "Incremental",
                "addressPrefix": "[parameters('subnetAddressPrefix')]"
              }
            }
          ],
          "virtualNetworkPeerings": []
        }
      },
      {
        "type": "Microsoft.Network/virtualNetworks/subnets",
        "name": "[concat(parameters('virtualNetworkName'), '/', parameters('subnetName'))]",
        "apiVersion": "2017-06-01",
        "properties": {
          "addressPrefix": "[parameters('subnetAddressPrefix')]",
          "privateAccessServices": []
        },
        "dependsOn": [
          "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworkName'))]"
        ]
      },
      {
        "apiVersion": "2015-06-15",
        "type": "Microsoft.Network/networkInterfaces",
        "name": "[concat(parameters('virtualNetworkName'), '-interface1')]",
        "location": "[resourceGroup().location]",
        "dependsOn": [
          "[concat('Microsoft.Network/virtualNetworks/', parameters('virtualNetworkName'))]"
        ],
        "properties": {
          "ipConfigurations": [
            {
              "name": "ipconfig1",
              "properties": {
                /*
                "privateIPAllocationMethod": "Static",
                // reserved IP address range for /24 is 1-3, so start with [0 + 4] or more
                "privateIPAddress": "[parameters('vmIP')]",
                */
                "privateIPAllocationMethod": "Dynamic",
                "subnet": {
                  "id": "[variables('subnetRef')]"
                }
              }
            }
          ]
        }
      }
    ],
    "outputs": {}
  }