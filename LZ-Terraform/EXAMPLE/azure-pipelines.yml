trigger:
  none

pool:
  vmImage: 'ubuntu-latest'

variables:
  - group: WiseOldTurtleSP  # Variable group where secrets are stored

stages:
  - stage: Build
    jobs:
      - job: Build
        steps:
          - checkout: self
            path: src
            clean: true

          - task: TerraformInstaller@1
            inputs:
              terraformVersion: 'latest'

          - task: CmdLine@2
            displayName: 'Download and Install Trivy vulnerability scanner'
            inputs:
              script: |
                sudo apt-get update
                sudo apt-get install -y wget apt-transport-https
                wget https://github.com/aquasecurity/trivy/releases/download/v0.20.0/trivy_0.20.0_Linux-64bit.deb
                sudo dpkg -i trivy_0.20.0_Linux-64bit.deb
                trivy -v

          - task: CmdLine@2
            displayName: 'LOW/MED - Trivy vulnerability scanner in IaC mode'
            inputs:
              script: |
                for file in $(find src -name "*/networking/*.tf"); do
                    trivy config --severity LOW,MEDIUM --exit-code 0 "$file"
                done

          - task: CmdLine@2
            displayName: 'HIGH/CRIT - Trivy vulnerability scanner in IaC mode'
            inputs:
              script: |
                for file in $(find src -name "*/networking/*.tf"); do
                    trivy config --severity HIGH,CRITICAL --exit-code 0 "$file"
                done

          - task: TerraformTaskV4@4
            displayName: 'Tf init'
            inputs:
              provider: 'azurerm'
              command: 'init'
              backendServiceArm: 'wiseoldturtle-terraform-sp'
              backendAzureRmResourceGroupName: 'tfstate'
              backendAzureRmStorageAccountName: 'terraformstate01'
              backendAzureRmContainerName: 'tfstate'
              backendAzureRmKey: 'terraform.tfstate'

          - task: TerraformTaskV4@4
            displayName: 'Tf plan'
            inputs:
              provider: 'azurerm'
              command: 'plan'
              commandOptions: '-out $(Build.SourcesDirectory)/tfplanfile'
              environmentServiceNameAzureRM: 'wiseoldturtle-terraform-sp'

          - task: CopyFiles@2
            displayName: 'Copy Files to Staging'
            inputs:
              SourceFolder: '$(Agent.BuildDirectory)/src'
              Contents: 'Terraform/**'
              TargetFolder: '$(Build.ArtifactStagingDirectory)'

          - task: ArchiveFiles@2
            displayName: 'Archive files'
            inputs:
              rootFolderOrFile: '$(Build.SourcesDirectory)/'
              includeRootFolder: false
              archiveType: 'zip'
              archiveFile: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip'
              replaceExistingArchive: true

          - task: PublishBuildArtifacts@1
            inputs:
              PathtoPublish: '$(Build.ArtifactStagingDirectory)'
              ArtifactName: '$(Build.BuildId)-build'
              publishLocation: 'Container'
